%h1 #{@user.full_name}'s user page
%h2 User information
%p Update any of the fields below and click the "Update user information" button
=form_for(@user) do |f|
  = render 'user_fields', f: f
  .row
    .col-md-9
      - if can? :manage, User
        %h2 Administrator area
        .panel.panel-default
          .panel-heading
            %h3.panel-title Assign status and roles
          .panel-body
            %h4 Status
            .form-inline
              .form-group
                = f.radio_button :status, "P", class: "form-control", checked: @user.is_pending?
                = f.label :status, "Pending"
              .form-group
                = f.radio_button :status, "A", class: "form-control", checked: @user.is_active?
                = f.label :status, "Active"
              .form-group
                = f.radio_button :status, "I", class: "form-control", checked: @user.is_inactive?
                = f.label :status, "Inactive"
            %h4 Roles
            .form-inline
              .form-group
                = f.collection_check_boxes :roles, Role.all, :id, :name do |b|
                  - checked = @user.role_ids.any? { |id| id == b.value }
                  = b.check_box(class: "form-control", checked: checked)
                  = b.label
                  %br
      = f.submit "Update user information", class: 'btn btn-info btn-lg'
.row
  .col-md-9
    - if can? :manage, User
      - if !@user.user_custom_organization.nil? || !@user.user_custom_labgroup.nil?
        #labs_and_orgs.panel.panel-default
          .panel-heading
            %h3.panel-title Add user-contributed labs and organizations
          .panel-body
            %p This user has added a new organization and/or lab. Review the details below and use the "Add organization" and "Add lab" buttons to add them to the database
            - if !@user.user_custom_organization.nil?
              - uco = @user.user_custom_organization
              -#=@user.user_custom_organization.attributes.to_yaml
              %ul
                - uco.attributes.each do |key, val|
                  -key = key.split('_')
                  -if key.first == 'custom'
                    -key = key.last.capitalize
                    %li= [key, val].join(': ')
                - if !uco.state_id.nil?
                  - state = State.find(uco.state_id)
                  %li State: state
              -#= render 'custom_organization_fields', f: f
              = button_to 'Add organization', organizations_path(org_id: @user.user_custom_organization), class: 'btn btn-info', remote: true
      .panel.panel-default
        .panel-heading
          %h3.panel-title Delete user account
        .panel-body
          %p If this is a bogus user account or the user needs to be deleted, use the "Delete user account" button below.
          = link_to 'Delete user', user_path(@user), class: 'btn btn-primary', remote: true, method: :delete

